\BOOKMARK [1][-]{section.1}{Note de non confidentialit\351}{}% 1
\BOOKMARK [1][-]{section.2}{Remerciements}{}% 2
\BOOKMARK [1][-]{section.3}{R\351sum\351}{}% 3
\BOOKMARK [1][-]{section.4}{Mots clefs}{}% 4
\BOOKMARK [1][-]{section*.3}{Glossaire}{}% 5
\BOOKMARK [1][-]{section.5}{Motivations et contexte}{}% 6
\BOOKMARK [2][-]{subsection.5.1}{Enjeux du calcul sur gpu}{section.5}% 7
\BOOKMARK [2][-]{subsection.5.2}{Architecture d'un gpu}{section.5}% 8
\BOOKMARK [2][-]{subsection.5.3}{Mod\350le de programmation d'un gpu}{section.5}% 9
\BOOKMARK [2][-]{subsection.5.4}{Objet de l'\351tude}{section.5}% 10
\BOOKMARK [1][-]{section.6}{L'outil OpenACC}{}% 11
\BOOKMARK [2][-]{subsection.6.1}{Philosophie OpenACC}{section.6}% 12
\BOOKMARK [2][-]{subsection.6.2}{Compilation}{section.6}% 13
\BOOKMARK [2][-]{subsection.6.3}{Profiling}{section.6}% 14
\BOOKMARK [2][-]{subsection.6.4}{Portabilit\351}{section.6}% 15
\BOOKMARK [2][-]{subsection.6.5}{Etapes de l'optimisation d'un code}{section.6}% 16
\BOOKMARK [1][-]{section.7}{Etude de cas acad\351miques avec OpenACC}{}% 17
\BOOKMARK [2][-]{subsection.7.1}{DGEMM}{section.7}% 18
\BOOKMARK [3][-]{subsubsection.7.1.1}{Pr\351sentation de la routine}{subsection.7.1}% 19
\BOOKMARK [3][-]{subsubsection.7.1.2}{Code}{subsection.7.1}% 20
\BOOKMARK [3][-]{subsubsection.7.1.3}{D\351tail des clauses}{subsection.7.1}% 21
\BOOKMARK [3][-]{subsubsection.7.1.4}{Etude du param\351trage}{subsection.7.1}% 22
\BOOKMARK [3][-]{subsubsection.7.1.5}{Mesures de performances}{subsection.7.1}% 23
\BOOKMARK [2][-]{subsection.7.2}{Int\351gration par la m\351thode des trap\350zes}{section.7}% 24
\BOOKMARK [3][-]{subsubsection.7.2.1}{Pr\351sentation}{subsection.7.2}% 25
\BOOKMARK [3][-]{subsubsection.7.2.2}{Code}{subsection.7.2}% 26
\BOOKMARK [3][-]{subsubsection.7.2.3}{D\351tail des clauses}{subsection.7.2}% 27
\BOOKMARK [3][-]{subsubsection.7.2.4}{Mesure des performances}{subsection.7.2}% 28
\BOOKMARK [2][-]{subsection.7.3}{Diff\351rences finies}{section.7}% 29
\BOOKMARK [3][-]{subsubsection.7.3.1}{Pr\351sentation}{subsection.7.3}% 30
\BOOKMARK [3][-]{subsubsection.7.3.2}{Code}{subsection.7.3}% 31
\BOOKMARK [3][-]{subsubsection.7.3.3}{D\351tail des clauses}{subsection.7.3}% 32
\BOOKMARK [3][-]{subsubsection.7.3.4}{Mesure des performances}{subsection.7.3}% 33
\BOOKMARK [1][-]{section.8}{Le cas des \351l\351ments finis}{}% 34
\BOOKMARK [2][-]{subsection.8.1}{Expos\351 du probl\350me}{section.8}% 35
\BOOKMARK [2][-]{subsection.8.2}{Abord du code}{section.8}% 36
\BOOKMARK [2][-]{subsection.8.3}{Codes}{section.8}% 37
\BOOKMARK [2][-]{subsection.8.4}{D\351tail des clauses}{section.8}% 38
\BOOKMARK [2][-]{subsection.8.5}{Mesure des performances}{section.8}% 39
\BOOKMARK [1][-]{section.9}{Conclusion}{}% 40
\BOOKMARK [2][-]{subsection.9.1}{Retour sur les r\351sultats obtenus}{section.9}% 41
\BOOKMARK [2][-]{subsection.9.2}{Comp\351tences acquises}{section.9}% 42
\BOOKMARK [1][-]{appendix.A}{Directives de paral OpenACC}{}% 43
\BOOKMARK [2][-]{subsection.A.1}{La directive parallel}{appendix.A}% 44
\BOOKMARK [2][-]{subsection.A.2}{La directive kernels}{appendix.A}% 45
\BOOKMARK [2][-]{subsection.A.3}{La directive seq}{appendix.A}% 46
\BOOKMARK [2][-]{subsection.A.4}{La directive loop}{appendix.A}% 47
\BOOKMARK [2][-]{subsection.A.5}{La directive routine}{appendix.A}% 48
\BOOKMARK [2][-]{subsection.A.6}{La directive atomic}{appendix.A}% 49
\BOOKMARK [1][-]{appendix.B}{Les arguments OpenACC}{}% 50
\BOOKMARK [2][-]{subsection.B.1}{L'argument reduction}{appendix.B}% 51
\BOOKMARK [2][-]{subsection.B.2}{L'argument private}{appendix.B}% 52
\BOOKMARK [2][-]{subsection.B.3}{Les arguments gang, workers et vector}{appendix.B}% 53
\BOOKMARK [2][-]{subsection.B.4}{L'argument collapse\(\)}{appendix.B}% 54
\BOOKMARK [1][-]{appendix.C}{Gestion de la m\351moire}{}% 55
\BOOKMARK [2][-]{subsection.C.1}{La clause data}{appendix.C}% 56
\BOOKMARK [2][-]{subsection.C.2}{L'argument copyin\(\)}{appendix.C}% 57
\BOOKMARK [2][-]{subsection.C.3}{L'argument copyout\(\)}{appendix.C}% 58
\BOOKMARK [2][-]{subsection.C.4}{L'argument copy\(\)}{appendix.C}% 59
\BOOKMARK [2][-]{subsection.C.5}{L'argument present\(\)}{appendix.C}% 60
\BOOKMARK [2][-]{subsection.C.6}{L'argument update\(\)}{appendix.C}% 61
\BOOKMARK [2][-]{subsection.C.7}{Le pr\351fixe p-}{appendix.C}% 62
\BOOKMARK [2][-]{subsection.C.8}{Les structures en C++}{appendix.C}% 63
\BOOKMARK [1][-]{appendix.D}{Affinage du code}{}% 64
\BOOKMARK [2][-]{subsection.D.1}{Gestion des gangs, workers et vecteurs}{appendix.D}% 65
\BOOKMARK [2][-]{subsection.D.2}{Gestion des kernels et de la synchronicit\351}{appendix.D}% 66
\BOOKMARK [2][-]{subsection.D.3}{Gestion de plusieurs acc\351l\351rateurs}{appendix.D}% 67
